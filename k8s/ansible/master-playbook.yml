---
- hosts: all
  become: yes
  become_user: root
  tasks:
  - name: Wait for cloud-init / user-data to finish
    command: cloud-init status --wait
    changed_when: false

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - nfs-common  # NFS client package

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install docker and its dependencies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - Start Docker

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
      append: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Ensure Docker is running
    service:
      name: docker
      state: started
      enabled: yes

  - name: Check if Rancher agent is already running
    command: "{{ item }}"
    register: rancher_agent_running
    changed_when: false
    with_items:
    - sudo docker ps
    - grep rancher/hyperkube


  - name: Register with Rancher server
    command: sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.7.5 --server {{ rancherip }} --token {{ ranchertoken }} --ca-checksum {{ ranchercachecksum }} --node-name {{ nodename }} --address {{ nodeip }} --etcd --controlplane
    when: rancher_agent_running.stdout == ""

  - name: Create mount directory
    file:
      path: /mnt/nfs
      state: directory

  - name: Mount NFS share
    mount:
      src: nas-dsm-01:/homelab
      path: /mnt/nfs
      fstype: nfs
      opts: rw
      state: mounted

  handlers:
  - name: Start Docker
    service:
      name: docker
      state: started
      enabled: yes
